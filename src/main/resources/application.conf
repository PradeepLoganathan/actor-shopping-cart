akka {
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  
  log-config-on-start = on
  
  actor {
    debug {
      receive = on
      autoreceive = off
      lifecycle = off
      event-stream = off
      unhandled = on
    }
    
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    
    serialization-bindings {
      "com.example.shoppingcart.model.ShoppingCartEvent" = jackson-json
      "com.example.shoppingcart.model.PersistentCartState" = jackson-json
    }
    
    # Enable Cluster
    provider = "cluster"
  }
  
  # --- CLUSTER AND NETWORKING CONFIGURATION ---
  
  # Configure the network transport layer (Artery)
  remote.artery {
    transport = tcp
    canonical.hostname = "127.0.0.1"
    canonical.port = 25520 # A port for Akka to listen on
  }
  
  cluster {
    # Define the seed nodes for the cluster. For a single-node local setup,
    # this node points to itself.
    seed-nodes = [
      "akka://shopping-cart-system@127.0.0.1:25520"
    ]
    
    # You can keep the SBR for when you expand to a multi-node cluster,
    # but it's not strictly needed for a single node.
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    
    failure-detector.acceptable-heartbeat-pause = 10s
  }
  
  persistence {
    journal {
      plugin = "akka.persistence.journal.inmem"
    }
    
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
  }
  
  cluster.sharding {
    number-of-shards = 100
    remember-entities = on
    rebalance-threshold = 1
    
    # Use an in-memory store for remember-entities instead of the default
    # LMDB, which avoids the Java 17 module reflection error.
    state-store-mode = "ddata"
    
    ddata {
      # Disable the durable store that causes the crash.
      # The state will be kept in memory only.
      durable-keys = []
    }
  }
  
  jvm-exit-on-fatal-error = on
}
